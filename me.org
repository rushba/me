* el-get
#+begin_src emacs-lisp
  (add-to-list 'load-path "~/.emacs.d/el-get/el-get")

  (unless (require 'el-get nil 'noerror)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.github.com/dimitri/el-get/master/el-get-install.el")
      (let (el-get-master-branch)
        (goto-char (point-max))
        (eval-print-last-sexp))))

#+end_src
* load helper
#+begin_src emacs-lisp
  (defun me-load(file)
    (setq el-get-sources nil)
    (org-babel-load-file file)
    (el-get 'sync (mapcar 'el-get-source-name el-get-sources)))
#+end_src
* load settings
** misc
#+begin_src emacs-lisp
(me-load "~/.emacs.d/me-misc.org")
#+end_src
** gui related
#+begin_src emacs-lisp
(me-load "~/.emacs.d/me-gui.org")
#+end_src
** key bindings
#+begin_src emacs-lisp
(global-set-key "\C-xc" 'compile)
#+end_src
** c related
#+begin_src emacs-lisp
(me-load "~/.emacs.d/me-cc.org")
#+end_src
** org-mode
#+begin_src emacs-lisp
(me-load "~/.emacs.d/me-org.org")
#+end_src
** prog tools
#+begin_src emacs-lisp
(me-load "~/.emacs.d/me-prog-tools.org")
#+end_src
** python related
#+begin_src emacs-lisp
(me-load "~/.emacs.d/me-py.org")
#+end_src
